{"version":3,"file":"index.js","sources":["../src/lib/fns.js","../src/lib/dom.js","../src/index.js"],"sourcesContent":["// 空函数\r\nexport function emptyFn() {}\r\n\r\n// 类型判断：函数\r\nexport function isFunction(target) {\r\n  return typeof target === 'function'\r\n}\r\n\r\n// 类型判断：字符串\r\nexport function isString(target) {\r\n  return typeof target === 'string'\r\n}\r\n\r\n// 类型判断：Node 节点\r\nexport function isNode(target) {\r\n  return target instanceof Node\r\n}\r\n\r\n// 类型判断：Element 元素\r\nexport function isElement(target) {\r\n  return target instanceof Element\r\n}","import * as fns from './fns.js'\r\n\r\nclass element {\r\n  \r\n  constructor(target) {\r\n    if (target instanceof element) {\r\n      this.el = target.el\r\n    }\r\n    else if (fns.isString(target)) {\r\n      this.el = document.querySelector(target)\r\n    }\r\n    else if (fns.isNode(target) || fns.isElement(target)) {\r\n      this.el = target\r\n    }\r\n    if (!this.el) {\r\n      throw new Error('无效的监听对象！')\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 绑定数据\r\n   * @param {any} key 键\r\n   * @param {any} value 值\r\n   */\r\n  data(key, value = undefined) {\r\n    let dataSource = this.el.dataSource\r\n    if (!dataSource) {\r\n      dataSource = new Map()\r\n      this.el.dataSource = dataSource\r\n    }\r\n    if (value !== undefined) {\r\n      dataSource.set(key, value)\r\n      return this\r\n    }\r\n    return dataSource.get(key)\r\n  }\r\n}\r\n\r\nexport default function selector(target) {\r\n  return new element(target)\r\n}","import * as fns from './lib/fns.js'\r\nimport selector from './lib/dom.js'\r\n\r\n// 缓存器的键名\r\nconst observerKey = 'm-observer'\r\n\r\n// 初始化缓存器\r\nfunction initData(el) {\r\n  let mo = el.data(observerKey)\r\n  // 初始化\r\n  if (!mo) {\r\n    mo = new Map()\r\n    el.data(observerKey, mo)\r\n  }\r\n  return mo\r\n}\r\n\r\n// 保存数据\r\nfunction setData(el, callback, config, observer) {\r\n  let data = initData(el)\r\n  let old = data.get(callback)\r\n  if (old && old.observer) {\r\n    old.observer.disconnect()\r\n  }\r\n  data.set(callback, { callback, config, observer })\r\n}\r\n\r\n\r\n// 获取数据\r\nfunction getData(el, callback, clean = false) {\r\n  let data = initData(el)\r\n  let temp = data.get(callback)\r\n  // 清理数据\r\n  if (clean) {\r\n    data.delete(callback)\r\n  }\r\n  return temp || {}\r\n}\r\n\r\n/**\n * childList，attributes 或者 characterData 三个属性之中，至少有一个必须为 true，否则会抛出 TypeError 异常\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {Function} callback 当观察到变动时执行的回调函数\n * @param {Object} config MutationObserverInit字典配置项\n * @return {observer} MutationObserver实例\n */\r\nexport function observe(target, callback, config) {\r\n  let el = selector(target)\r\n  if (!fns.isFunction(callback)) {\r\n    throw new Error('无效的观察回到函数！')\r\n  }\r\n  let observer = new MutationObserver(callback)\r\n  observer.observe(el.el, config)\r\n  setData(el, callback, config, observer)\r\n  return observer\r\n}\r\n\r\n/**\n * 监听元素的属性值变更\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {Function} callback 当观察到变动时执行的回调函数\r\n * @param {Boolean} subtree 是否观察子节点\n * @return {observer} MutationObserver实例\n */\r\nexport function attribute(target, callback, subtree = false) {\r\n  let config = {\r\n    subtree: !!subtree,\r\n    attributes: true,\r\n    attributeOldValue: true\r\n  }\r\n  return observe(target, callback, config)\r\n}\r\n\r\n/**\n * 监听元素的特定属性名称\n * \n * @param {Element|Node|String} target 被监听的节点\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @param {Array} filter 要监视的特定属性名称的数组。如果未包含此属性，则对所有属性的更改都会触发变动通知\r\n * @param {Boolean} subtree 是否观察子节点\n * @return {observer} MutationObserver实例\n */\nexport function attributeFilter(target, callback, filter, subtree = false) {\n  let config = {\r\n    subtree: !!subtree,\n    attributes: true,\n    attributeFilter: filter,\n    attributeOldValue: true\n  }\n  return observe(target, callback, config)\n}\r\n\r\n/**\n * 监视目标节点的子节点的添加或删除\n * \n * @param {Element|Node|String} target 被监听的节点 \n * @param {Function} callback 当观察到变动时执行的回调函数\r\n * @param {Boolean} subtree 是否观察子节点\n * @return {observer} MutationObserver实例\n */\nexport function childList(target, callback, subtree = false) {\n  let config = {\r\n    subtree: !!subtree,\r\n    childList: true,\r\n  }\r\n  return observe(target, callback, config)\n}\r\n\r\n/**\n * 监视指定目标节点或子节点树中节点所包含的字符数据的变化\n * \n * @param {Element|Node|String} target 被监听的节点\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {observer} MutationObserver实例\n */\nexport function character(target, callback) {\n  let config = {\n    subtree: true,\n    characterData: true,\n    characterDataOldValue: true,\n  }\n  return observe(target, callback, config)\n}\r\n\r\n/**\n * 从MutationObserver的通知队列中删除所有待处理的通知，并将它们返回到MutationRecord对象的新Array中\n * \n * @param {Element|Node|String} target  \n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {Array}\n */\r\nexport function takeRecords(target, callback) {\r\n  let el = selector(target)\r\n  let { observer } = getData(el, callback)\r\n  if (observer instanceof MutationObserver) {\r\n    return observer.takeRecords()\r\n  }\r\n  return []\r\n}\r\n\r\n/**\n * 告诉观察者停止观察变动，返回还未处理的通知\n * \n * @param {Element|Node|String} target 被监听的节点 \n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {Array}\n */\r\nexport function disconnect(target, callback) {\r\n  let el = selector(target)\r\n  let { observer } = getData(el, callback)\r\n  let temp = []\r\n  if (observer) {\r\n    temp = observer.takeRecords()\r\n    observer.disconnect()\r\n  }\r\n  return temp\r\n}\r\n\r\n/**\n * 告诉观察者重新开始观察行为\n * \n * @param {Element|Node|String} target 被监听的节点 \n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {observer} MutationObserver实例\n */\r\nexport function reconnect(target, callback) {\r\n  let el = selector(target)\r\n  let { observer, config } = getData(el, callback)\r\n  if (!(observer instanceof MutationObserver)) {\r\n    throw new Error('该监听器不存在（未定义或已被移除）！')\r\n  }\r\n  observer.observe(el.el, config)\r\n  return observer\r\n}\r\n\r\n/**\n * 移除观察者，返回还未处理的通知\n * \n * @param {Element|Node|String} target 被监听的节点 \n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {Array}\n */\r\nexport function remove(target, callback) {\r\n  let el = selector(target)\r\n  let { observer } = getData(el, callback, true)\r\n  if (observer instanceof MutationObserver) {\r\n    let temp = observer.takeRecords()\r\n    observer.disconnect()\r\n    return temp\r\n  }\r\n  return []\r\n}"],"names":["isFunction","target","isString","isNode","Node","isElement","Element","element","constructor","el","fns","document","querySelector","Error","data","key","value","undefined","dataSource","Map","set","get","selector","observerKey","initData","mo","setData","callback","config","observer","old","disconnect","getData","clean","temp","delete","observe","MutationObserver","attribute","subtree","attributes","attributeOldValue","attributeFilter","filter","childList","character","characterData","characterDataOldValue","takeRecords","reconnect","remove"],"mappings":"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"}