{"version":3,"file":"index.js","sources":["../src/lib/fns.js","../src/lib/dom.js","../src/index.js"],"sourcesContent":["// 空函数\r\nexport function emptyFn() {}\r\n\r\n// 类型判断：函数\r\nexport function isFunction(target) {\r\n  return typeof target === 'function'\r\n}\r\n\r\n// 类型判断：字符串\r\nexport function isString(target) {\r\n  return typeof target === 'string'\r\n}\r\n\r\n// 类型判断：Node 节点\r\nexport function isNode(target) {\r\n  return target instanceof Node\r\n}\r\n\r\n// 类型判断：Element 元素\r\nexport function isElement(target) {\r\n  return target instanceof Element\r\n}","import * as fns from './fns.js'\r\n\r\nclass element {\r\n  \r\n  // 缓存元素节点的数组\r\n  #elem\r\n  \r\n  get el() {\r\n    return this.#elem\r\n  }\r\n  \r\n  constructor(target) {\r\n    if (target instanceof element) {\r\n      this.#elem = target.el\r\n    }\r\n    else if (fns.isString(target)) {\r\n      this.#elem = document.querySelector(target)\r\n    }\r\n    else if (fns.isNode(target) || fns.isElement(target)) {\r\n      this.#elem = target\r\n    }\r\n    if (!this.el) {\r\n      throw new Error('无效的监听对象！')\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 绑定数据\r\n   * @param {any} key 键\r\n   * @param {any} value 值\r\n   */\r\n  data(key, value) {\r\n    let dataSource = this.el.dataSource\r\n    if (!dataSource) {\r\n      dataSource = new Map()\r\n      this.el.dataSource = dataSource\r\n    }\r\n    if (value) {\r\n      dataSource.set(key, value)\r\n      return this\r\n    }\r\n    return dataSource.get(key)\r\n  }\r\n}\r\n\r\nexport default function selector(target) {\r\n  return new element(target)\r\n}","import * as fns from './lib/fns.js'\r\nimport selector from './lib/dom.js'\r\n\r\nconst observeKey = 'm-observer'\r\n\r\nconst CONFIG = {\n  // 设为 true 以观察受监视元素的属性值变更。默认值为 false\n  attributes: true,\n  // 要监视的特定属性名称的数组。如果未包含此属性，则对所有属性的更改都会触发变动通知。无默认值\n  // attributeFilter: [],\n  // 当监视节点的属性改动时，将此属性设为 true 将记录任何有改动的属性的上一个值。有关观察属性更改和值记录的详细信息。无默认值\n  attributeOldValue: true,\n  // 设为 true 以监视目标节点（如果 subtree 为 true，则包含子孙节点）添加或删除新的子节点。默认值为 false\n  childList: true,\n  // 设为 true 以将监视范围扩展至目标节点整个节点树中的所有节点。MutationObserverInit 的其他值也会作用于此子树下的所有节点，而不仅仅只作用于目标节点。默认值为 false\n  subtree: true,\n  // 设为 true 以监视指定目标节点或子节点树中节点所包含的字符数据的变化。无默认值\n  characterData: true,\n  // 设为 true 以在文本在受监视节点上发生更改时记录节点文本的先前值。无默认值\n  characterDataOldValue: true,\n}\r\n\r\nfunction initData(el) {\r\n  let mo = el.data(observeKey)\r\n  // 初始化\r\n  if (!mo) {\r\n    mo = new Map()\r\n    el.data(observeKey, mo)\r\n  }\r\n  return mo\r\n}\r\n\r\n/**\r\n * 缓存 监听器实例\r\n * \r\n * @param {element} el\r\n * @param {any} name\r\n * @param {MutationObserver} observe\r\n * @param {Object} option\r\n */\r\nfunction setData(el, name, observe, option) {\r\n  let mo = initData(el)\r\n  // 如果已存在同名监听器，销毁旧监听器\r\n  let old = mo.get(name)\r\n  if (old && old.observe) {\r\n    old.observe.disconnect()\r\n  }\r\n  mo.set(name, { observe, option })\r\n}\r\n\r\n/**\r\n * 获取 监听器实例\r\n * @param {element} el\r\n * @param {any} name\r\n */\r\nfunction getData(el, name) {\r\n  let mo = initData(el)\r\n  return mo.get(name) || {}\r\n}\r\n\r\n/**\r\n * 获取 监听器实例，并删除缓存\r\n * @param {element} el\r\n * @param {any} name\r\n */\r\nfunction spliceData(el, name) {\r\n  let mo = initData(el)\r\n  let temp = mo.get(name)\r\n  if (temp) {\r\n    mo.delete(name)\r\n    return temp\r\n  }\r\n  return {}\r\n}\r\n\r\n/**\r\n * @param {element} el\r\n */\r\nfunction spliceAllData(el) {\r\n  let mo = initData(el)\r\n  let temp = []\r\n  mo.forEach((v, k) => {\r\n    temp.push([k, v])\r\n  })\r\n  mo.clear()\r\n  return temp\r\n}\r\n\r\n/**\n * childList，attributes 或者 characterData 三个属性之中，至少有一个必须为 true，否则会抛出 TypeError 异常\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {any} name MutationObserver实例的标记名称\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @param {Object} config MutationObserverInit字典配置项\n * @return {observer} MutationObserver实例\n */\r\nexport function observe(target, name, callback, config) {\r\n  let el = selector(target)\r\n  if (!fns.isFunction(callback)) {\r\n    callback = fns.emptyFn\r\n  }\r\n  let ob = new MutationObserver(callback)\r\n  ob.observe(el.el, config)\r\n  setData(el, name, ob, {\r\n    fn: callback,\r\n    config: config\r\n  })\r\n  return ob\r\n}\r\n\r\n/**\n * 监听 target 的所有配置项\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {any} name MutationObserver实例的标记名称\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @param {Array} filter 要监视的特定属性名称的数组。如果未包含此属性，则对所有属性的更改都会触发变动通知\n * @return {observer} MutationObserver实例\n */\r\nexport function observeAll(target, name, callback, filter = null) {\r\n  let config = Object.assign({}, CONFIG, Array.isArray(filter) && filter.length ? { attributeFilter: filter } : {})\r\n  return observe(target, name, callback, config)\r\n}\r\n\r\n/**\n * 监听元素的属性值变更\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {any} name MutationObserver实例的标记名称\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {observer} MutationObserver实例\n */\r\nexport function attribute(target, name, callback) {\r\n  let config = {\r\n    attributes: true,\r\n    attributeOldValue: true\r\n  }\r\n  return observe(target, name, callback, config)\r\n}\r\n\r\n/**\n * 监听元素及其后代元素的属性值变更\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {any} name MutationObserver实例的标记名称\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {observer} MutationObserver实例\n */\nexport function attributeChild(target, name, callback) {\n  let config = {\n    subtree: true,\n    attributes: true,\n    attributeOldValue: true\n  }\n  return observe(target, name, callback, config)\n}\r\n\r\n/**\n * 监听元素的特定属性名称\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {any} name MutationObserver实例的标记名称\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @param {Array} filter 要监视的特定属性名称的数组。如果未包含此属性，则对所有属性的更改都会触发变动通知\n * @return {observer} MutationObserver实例\n */\nexport function attributeFilter(target, name, callback, filter) {\n  let config = {\n    attributes: true,\n    attributeFilter: filter,\n    attributeOldValue: true\n  }\n  return observe(target, name, callback, config)\n}\r\n\r\n/**\n * 监听元素及其后代元素的特定属性名称\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {any} name MutationObserver实例的标记名称\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @param {Array} filter 要监视的特定属性名称的数组。如果未包含此属性，则对所有属性的更改都会触发变动通知\n * @return {observer} MutationObserver实例\n */\nexport function attributeFilterChild(target, name, callback, filter) {\n  let config = {\n    subtree: true,\n    attributes: true,\n    attributeFilter: filter,\n    attributeOldValue: true\n  }\n  return observe(target, name, callback, config)\n}\r\n\r\n/**\n * 监视目标节点的子节点的添加或删除\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {any} name MutationObserver实例的标记名称\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {observer} MutationObserver实例\n */\nexport function node(target, name, callback) {\n  return observe(target, name, callback, { childList: true })\n}\n\n/**\n * 监视目标节点的后代节点的添加或删除\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {any} name MutationObserver实例的标记名称\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {observer} MutationObserver实例\n */\nexport function nodeChild(target, name, callback) {\n  let config = {\n    subtree: true,\n    childList: true,\n  }\n  return observe(target, name, callback, config)\n}\r\n\r\n/**\n * 监视指定目标节点或子节点树中节点所包含的字符数据的变化\n * \n * @param {Element|Node|String} target 被监听的节点  \n * @param {any} name MutationObserver实例的标记名称\n * @param {Function} callback 当观察到变动时执行的回调函数\n * @return {observer} MutationObserver实例\n */\nexport function character(target, name, callback) {\n  let config = {\n    subtree: true,\n    characterData: true,\n    characterDataOldValue: true,\n  }\n  return observe(target, name, callback, config)\n}\r\n\r\n/**\n * 从MutationObserver的通知队列中删除所有待处理的通知，并将它们返回到MutationRecord对象的新Array中\n * \n * @param {Element|Node|String} target  \n * @param {any} name MutationObserver实例的标记名称\n * @return {Array}\n */\r\nexport function takeRecords(target, name) {\r\n  let el = selector(target)\r\n  let { observe } = getData(el, name)\r\n  if (observe) {\r\n    return observe.takeRecords()\r\n  }\r\n  return []\r\n}\r\n\r\n/**\n * 告诉观察者停止观察变动，返回还未处理的通知\n * \n * @param {Element|Node|String} target 被监听的节点 \n * @param {any} name MutationObserver实例的标记名称\n * @return {Array}\n */\r\nexport function disconnect(target, name) {\r\n  let el = selector(target)\r\n  let { observe } = getData(el, name)\r\n  let temp = []\r\n  if (observe) {\r\n    temp = observe.takeRecords()\r\n    observe.disconnect()\r\n  }\r\n  return temp\r\n}\r\n\r\n/**\n * 告诉观察者重新开始观察行为\n * \n * @param {Element|Node|String} target 被监听的节点 \n * @param {any} name MutationObserver实例的标记名称\n * @return {observer} MutationObserver实例\n */\r\nexport function reconnect(target, name) {\r\n  let el = selector(target)\r\n  let { observe, option } = getData(el, name)\r\n  if (!observe) {\r\n    throw new Error('该监听器不存在（未定义或已被移除）！')\r\n  }\r\n  observe.observe(el.el, option.config)\r\n  return observe\r\n}\r\n\r\n/**\n * 移除观察者，返回还未处理的通知\n * \n * @param {Element|Node|String} target 被监听的节点 \n * @param {any} name MutationObserver实例的标记名称\n * @return {Array}\n */\r\nexport function remove(target, name) {\r\n  let el = selector(target)\r\n  let { observe } = spliceData(el, name)\r\n  if (observe) {\r\n    let temp = observe.takeRecords()\r\n    observe.disconnect()\r\n    return temp\r\n  }\r\n  return []\r\n}\r\n\r\n/**\n * 移除所有观察者\n * \n * @param {Element|Node|String} target 被监听的节点\n */\r\nexport function clear(target) {\r\n  let el = selector(target)\r\n  let values = spliceAllData(el)\r\n  values.forEach(row => {\r\n    row[1].observe.disconnect()\r\n  })\r\n}"],"names":["emptyFn","isFunction","target","isString","isNode","Node","isElement","Element","element","el","constructor","fns","document","querySelector","Error","data","key","value","dataSource","Map","set","get","selector","observeKey","CONFIG","attributes","attributeOldValue","childList","subtree","characterData","characterDataOldValue","initData","mo","setData","name","observe","option","old","disconnect","getData","spliceData","temp","delete","spliceAllData","forEach","v","k","push","clear","callback","config","ob","MutationObserver","fn","observeAll","filter","Object","assign","Array","isArray","length","attributeFilter","attribute","attributeChild","attributeFilterChild","node","nodeChild","character","takeRecords","reconnect","remove","values","row"],"mappings":"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"}